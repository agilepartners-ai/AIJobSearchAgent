# GitHub Actions Workflow for Google Cloud Run Deployment

name: Deploy to Google Cloud Run

# Controls when the action will run. 
on:
  push:
    branches:
      - main # Production branch
      - develop # Development branch
  workflow_dispatch: # Allows manual triggering of the workflow

# Environment variables available to all jobs and steps in this workflow.
env:
  # Common variables
  GCP_REGION: us-central1 # Change to your preferred GCP region
  GAR_LOCATION: us-central1 # Change to your Artifact Registry location
  # Environment-specific variables will be set in the jobs

jobs:
  deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    # Grant permissions to the workflow to write to Google Cloud
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Environment-specific configuration ---
      - name: Set up environment-specific variables (Prod)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "GCP_PROJECT_ID=${{ secrets.GCP_PROD_PROJECT_ID }}" >> $GITHUB_ENV
          echo "GCP_SERVICE_ACCOUNT=${{ secrets.GCP_PROD_SERVICE_ACCOUNT }}" >> $GITHUB_ENV
          echo "SERVICE_NAME=myjobsearchagent-prod" >> $GITHUB_ENV
          echo "REPOSITORY_NAME=myjobsearchagent-prod-repo" >> $GITHUB_ENV
          # Add other prod-specific run-time env vars here
          # echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> $GITHUB_ENV

      - name: Set up environment-specific variables (Dev)
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "GCP_PROJECT_ID=${{ secrets.GCP_DEV_PROJECT_ID }}" >> $GITHUB_ENV
          echo "GCP_SERVICE_ACCOUNT=${{ secrets.GCP_DEV_SERVICE_ACCOUNT }}" >> $GITHUB_ENV
          echo "SERVICE_NAME=myjobsearchagent-dev" >> $GITHUB_ENV
          echo "REPOSITORY_NAME=myjobsearchagent-dev-repo" >> $GITHUB_ENV
          # Add other dev-specific run-time env vars here
          # echo "DATABASE_URL=${{ secrets.DEV_DATABASE_URL }}" >> $GITHUB_ENV

      # --- Authenticate to Google Cloud ---
      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ env.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider' # Update with your WIF details
          service_account: '${{ env.GCP_SERVICE_ACCOUNT }}'

      # --- Build and Push Docker Image ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image to Artifact Registry
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci-cd-cloudrun/Dockerfile
          push: true
          tags: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Deploy to Google Cloud Run ---
      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.GCP_REGION }}
          # Use the image pushed to GAR
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          # Optional: Pass run-time environment variables
          # env_vars: |
          #   DATABASE_URL=${{ env.DATABASE_URL }}
          #   API_KEY=${{ secrets.API_KEY }}

    # Optional: Add a final step to output the URL of the deployed service
      - name: Show Cloud Run Service URL
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
