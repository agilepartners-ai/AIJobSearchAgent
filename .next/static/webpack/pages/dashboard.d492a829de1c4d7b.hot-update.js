"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/dashboard",{

/***/ "./src/services/firebaseJobPreferencesService.ts":
/*!*******************************************************!*\
  !*** ./src/services/firebaseJobPreferencesService.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FirebaseJobPreferencesService: function() { return /* binding */ FirebaseJobPreferencesService; }\n/* harmony export */ });\n/* harmony import */ var _firebaseDBService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebaseDBService */ \"./src/services/firebaseDBService.ts\");\n\nclass FirebaseJobPreferencesService {\n    static basePath(userId) {\n        return \"jobPreferences/\".concat(userId);\n    }\n    static async getUserJobPreferences(userId) {\n        return _firebaseDBService__WEBPACK_IMPORTED_MODULE_0__.FirebaseDBService.read(this.basePath(userId));\n    }\n    static async saveJobPreferences(userId, preferences) {\n        const fullPreferences = {\n            ...preferences,\n            updated_at: new Date().toISOString()\n        };\n        return _firebaseDBService__WEBPACK_IMPORTED_MODULE_0__.FirebaseDBService.set(this.basePath(userId), fullPreferences);\n    }\n    static async deleteJobPreferences(userId) {\n        return _firebaseDBService__WEBPACK_IMPORTED_MODULE_0__.FirebaseDBService.delete(this.basePath(userId));\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2VydmljZXMvZmlyZWJhc2VKb2JQcmVmZXJlbmNlc1NlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0Q7QUFhakQsTUFBTUM7SUFDWCxPQUFlQyxTQUFTQyxNQUFjLEVBQUU7UUFDeEMsT0FBTyxrQkFBeUIsT0FBUEE7SUFDM0I7SUFHRSxhQUFhQyxzQkFBc0JELE1BQWMsRUFBa0M7UUFDakYsT0FBT0gsaUVBQWlCQSxDQUFDSyxJQUFJLENBQWlCLElBQUksQ0FBQ0gsUUFBUSxDQUFDQztJQUM5RDtJQUVBLGFBQWFHLG1CQUFtQkgsTUFBYyxFQUFFSSxXQUFzRCxFQUFpQjtRQUNySCxNQUFNQyxrQkFBa0I7WUFDdEIsR0FBR0QsV0FBVztZQUNkRSxZQUFZLElBQUlDLE9BQU9DLFdBQVc7UUFDcEM7UUFDQSxPQUFPWCxpRUFBaUJBLENBQUNZLEdBQUcsQ0FBQyxJQUFJLENBQUNWLFFBQVEsQ0FBQ0MsU0FBU0s7SUFDdEQ7SUFFQSxhQUFhSyxxQkFBcUJWLE1BQWMsRUFBaUI7UUFDL0QsT0FBT0gsaUVBQWlCQSxDQUFDYyxNQUFNLENBQUMsSUFBSSxDQUFDWixRQUFRLENBQUNDO0lBQ2hEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NlcnZpY2VzL2ZpcmViYXNlSm9iUHJlZmVyZW5jZXNTZXJ2aWNlLnRzPzRjNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmlyZWJhc2VEQlNlcnZpY2UgfSBmcm9tICcuL2ZpcmViYXNlREJTZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSm9iUHJlZmVyZW5jZXMge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgam9iX3RpdGxlcz86IHN0cmluZ1tdO1xyXG4gIGxvY2F0aW9ucz86IHN0cmluZ1tdO1xyXG4gIHNhbGFyeV9leHBlY3RhdGlvbj86IG51bWJlciB8IG51bGw7XHJcbiAgZW1wbG95bWVudF90eXBlcz86IHN0cmluZ1tdO1xyXG4gIHJlbW90ZV9vbmx5PzogYm9vbGVhbjtcclxuICBza2lsbHM/OiBzdHJpbmdbXTtcclxuICB1cGRhdGVkX2F0Pzogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZWJhc2VKb2JQcmVmZXJlbmNlc1NlcnZpY2Uge1xyXG4gIHByaXZhdGUgc3RhdGljIGJhc2VQYXRoKHVzZXJJZDogc3RyaW5nKSB7XHJcbiAgcmV0dXJuIGBqb2JQcmVmZXJlbmNlcy8ke3VzZXJJZH1gO1xyXG59XHJcblxyXG5cclxuICBzdGF0aWMgYXN5bmMgZ2V0VXNlckpvYlByZWZlcmVuY2VzKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTxKb2JQcmVmZXJlbmNlcyB8IG51bGw+IHtcclxuICAgIHJldHVybiBGaXJlYmFzZURCU2VydmljZS5yZWFkPEpvYlByZWZlcmVuY2VzPih0aGlzLmJhc2VQYXRoKHVzZXJJZCkpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIHNhdmVKb2JQcmVmZXJlbmNlcyh1c2VySWQ6IHN0cmluZywgcHJlZmVyZW5jZXM6IE9taXQ8Sm9iUHJlZmVyZW5jZXMsICdpZCcgfCAndXBkYXRlZF9hdCc+KTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBmdWxsUHJlZmVyZW5jZXMgPSB7XHJcbiAgICAgIC4uLnByZWZlcmVuY2VzLFxyXG4gICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEZpcmViYXNlREJTZXJ2aWNlLnNldCh0aGlzLmJhc2VQYXRoKHVzZXJJZCksIGZ1bGxQcmVmZXJlbmNlcyk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZGVsZXRlSm9iUHJlZmVyZW5jZXModXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHJldHVybiBGaXJlYmFzZURCU2VydmljZS5kZWxldGUodGhpcy5iYXNlUGF0aCh1c2VySWQpKTtcclxuICB9XHJcbn1cclxuXHJcbiJdLCJuYW1lcyI6WyJGaXJlYmFzZURCU2VydmljZSIsIkZpcmViYXNlSm9iUHJlZmVyZW5jZXNTZXJ2aWNlIiwiYmFzZVBhdGgiLCJ1c2VySWQiLCJnZXRVc2VySm9iUHJlZmVyZW5jZXMiLCJyZWFkIiwic2F2ZUpvYlByZWZlcmVuY2VzIiwicHJlZmVyZW5jZXMiLCJmdWxsUHJlZmVyZW5jZXMiLCJ1cGRhdGVkX2F0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic2V0IiwiZGVsZXRlSm9iUHJlZmVyZW5jZXMiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/services/firebaseJobPreferencesService.ts\n"));

/***/ })

});